// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package lab.distribuidos.service.impl;

public final class ServidorImpl_Stub
    extends java.rmi.server.RemoteStub
    implements lab.distribuidos.service.Servidor, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_eliminarAlumno_0;
    private static java.lang.reflect.Method $method_ingresarAlumno_1;
    private static java.lang.reflect.Method $method_modificarAlumno_2;
    private static java.lang.reflect.Method $method_obtenerRecordAcademico_3;
    private static java.lang.reflect.Method $method_saludo_4;
    
    static {
	try {
	    $method_eliminarAlumno_0 = lab.distribuidos.service.Servidor.class.getMethod("eliminarAlumno", new java.lang.Class[] {int.class});
	    $method_ingresarAlumno_1 = lab.distribuidos.service.Servidor.class.getMethod("ingresarAlumno", new java.lang.Class[] {lab.distribuidos.beans.Alumno.class});
	    $method_modificarAlumno_2 = lab.distribuidos.service.Servidor.class.getMethod("modificarAlumno", new java.lang.Class[] {lab.distribuidos.beans.Alumno.class});
	    $method_obtenerRecordAcademico_3 = lab.distribuidos.service.Servidor.class.getMethod("obtenerRecordAcademico", new java.lang.Class[] {});
	    $method_saludo_4 = lab.distribuidos.service.Servidor.class.getMethod("saludo", new java.lang.Class[] {});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public ServidorImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of eliminarAlumno(int)
    public void eliminarAlumno(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_eliminarAlumno_0, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, 4231018284884061842L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of ingresarAlumno(Alumno)
    public void ingresarAlumno(lab.distribuidos.beans.Alumno $param_Alumno_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_ingresarAlumno_1, new java.lang.Object[] {$param_Alumno_1}, 4932454459194323586L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of modificarAlumno(Alumno)
    public void modificarAlumno(lab.distribuidos.beans.Alumno $param_Alumno_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_modificarAlumno_2, new java.lang.Object[] {$param_Alumno_1}, -6214316579057381749L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of obtenerRecordAcademico()
    public java.util.List obtenerRecordAcademico()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_obtenerRecordAcademico_3, null, 734936527592238288L);
	    return ((java.util.List) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of saludo()
    public java.lang.String saludo()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_saludo_4, null, 5271072451198932075L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
